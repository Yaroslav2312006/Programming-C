#include <stdio.h>
#include <stdlib.h>
#include <string.h>
// Определяем структуру P (Person) для хранения данных о человеке
typedef struct {
    char n[20];// Имя
    char s[20];// Фамилия  
    char g;// Пол (gender) 'M' или 'F'      
    int y; // Год рождения (year)      
    float h;// Рост в метрах (height)     
} P;
// Функция сравнения для сортировки (a и b элементы для сравнения, ƒ поля сортировки)
int c(P *a, P *b, int *f) {
    for(int i=0; f[i]; i++) {// Перебираем все указанные поля сортировки
        int r=0;// Результат сравнения
        switch(f[i]) {//В зависимости от выбранного поля
            case 1: r = a->y - b->y; break;// Сравнение по году рождения
            case 2: r = strcmp(a->n, b->n); break;// Сравнение по имени
            case 3: r = strcmp(a->s, b->s); break;// Сравнение по фамилии
            case 4: r = a->g - b->g; break;// Сравнение по полу
            case 5: r = (a->h > b->h) ? 1 : (a->h < b->h) ? -1 : 0; break;// Сравнение по росту
        }
        if(r) return r;// Если элементы отличаются, возвращаем результат
    }
    return 0;// Если все поля равны, возвращаем о
}
int main() {
    P p[100];// Массив для хранения данных (максимум 100 человек)
    int n=0,// Счетчик загруженных записей
        f[6]={0},// Массив для хранения полей сортировки (5 полей + 0 в конце)
        i=0;// Индекс для заполнения массива полей сортировки
    char t[10];// Буфер для ввода пользователя
    FILE *file = fopen("data.txt", "r");
    while(fscanf(file, "%19s %19s %d %c %f", p[n].n, p[n].s, &p[n].y, &p[n].g, &p[n].h) == 5)
        n++;// Увеличиваем счетчик при успешном чтении
    printf("Uploaded %d records.Sort by: 1-year 2-first name 3-last name 4-gender 5-height: ", n);
    // Читаем ввод пользователя и разбираем выбранные поля сортировки
    fgets(t, sizeof(t), stdin);
    char *tok = strtok(t, " ");// Разбиваем ввод по пробелам
    while(tok && i < 5) {
        int v = atoi(tok);// Преобразуем в число
        if(v > 0 && v < 6)// Проверяем корректность
            f[i++] = v;// Сохраняем выбранное поле         
        tok = strtok(NULL, " ");// Следующая часть ввода
    }
    // Сортировка пузырьком с использованием нашей функции сравнения
    for(int i = 0; i < n-1; i++)
        for(int j = 0; j < n-i-1; j++)
            if(c(&p[j], &p[j+1], f) > 0) {//Если порядок неправильный
                P t = p[j];// Меняем местами
                p[j] = p[j+1];
                p[j+1] = t;
            }
    //Вывод результатов
    printf("\n%-15s%-15s%-6s%-4s%s\n", "Name", "Familia", "Year", "Gender", "Height");
    for(int i = 0; i < n; i++)
        printf("%-15s%-15s%-6d%-4c%.2f\n", p[i].n, p[i].s, p[i].y, p[i].g, p[i].h);
    return 0;
}
